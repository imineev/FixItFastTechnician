package oracle.mobile.cloud.sample.fif.technician.mcs.diagnostic;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import oracle.mobile.cloud.sample.fif.technician.mcs.mbe.FiFMobileBackend;
import oracle.mobile.cloud.sample.fif.technician.utils.DateUtil;


/**
 * Gathers data relating to client to Mobile Cloud Service (MCS) API requests. This iformation
 * helps administrators to diagnose problems in the system for individual client sessions.
 *
 * @author Frank Nimphius
 * @copyright Copyright (c) 2015 Oracle. All rights reserved.
 */
public class Diagnostics {

    private FiFMobileBackend mobileBackend = null;

    //Diagnostic Header Names
    public static final String DIAGNOSTIC_SESSION_ID = "Oracle-Mobile-DIAGNOSTIC-SESSION-ID";
    public static final String DIAGNOSTIC_DEVICE_ID = "Oracle-Mobile-DEVICE-ID";
    public static final String DIAGNOSTIC_REQUEST_TIME = "Oracle-Mobile-CLIENT-REQUEST-TIME";

    public Diagnostics(FiFMobileBackend mbe) {
        super();
        this.mobileBackend = mbe;
    }

    public Map<String, String> getHTTPHeaders() {
        Map<String, String> headerMap = new HashMap<String, String>();
        //we don't have access to the device session. So we use a generated UID
        headerMap.put(DIAGNOSTIC_SESSION_ID, mobileBackend.getClientUID());

        //the clientUID is generated by this utility. However, for mobile applications that
        //have access to the device information, they can override the generated value on
        //the MBE backend.
        headerMap.put(DIAGNOSTIC_DEVICE_ID, mobileBackend.getClientUID());
        headerMap.put(DIAGNOSTIC_REQUEST_TIME, getRequestTimestamp());
        return headerMap;
    }

    public String getRequestTimestamp() {
        return DateUtil.getISOTimeStamp(new Date());
    }

    public FiFMobileBackend getMobileBackend() {
        return mobileBackend;
    }
}

